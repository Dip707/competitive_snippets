{
    "Header files and macros and typedefs":{
        "prefix": "!!basics",
        "body": [
            "#include <bits/stdc++.h>",
            "//For ordered_set",
            "#include <ext/pb_ds/assoc_container.hpp>",
            "#include <ext/pb_ds/tree_policy.hpp>",
            "#define MOD 1000000007",
            "#define test int t; cin>>t; while(t--)",
            "#define init(arr,val) memset(arr,val,sizeof(arr))",
            "#define loop(i,a,b) for(int i=a;i<b;i++)",
            "#define loopr(i,a,b) for(int i=a;i>=b;i--)",
            "#define loops(i,a,b,step) for(int i=a;i<b;i+=step)",
            "#define looprs(i,a,b,step) for(int i=a;i>=b;i-=step)",
            "#define ull unsigned long long int",
            "#define ll long long int",
            "#define P pair",
            "#define PLL pair<long long, long long>",
            "#define PII pair<int, int>",
            "#define PUU pair<unsigned long long int, unsigned long long int>",
            "#define L list",
            "#define V vector",
            "#define D deque",
            "#define ST set",
            "#define MS multiset",
            "#define M map",
            "#define UM unordered_map",
            "#define mp make_pair",
            "#define pb push_back",
            "#define pf push_front",
            "#define MM multimap",
            "#define F first",
            "#define S second",
            "#define IT iterator",
            "#define RIT reverse_iterator",
            "#define FAST ios_base::sync_with_stdio(false);cin.tie();cout.tie();",
            "#define FILE_READ_IN freopen(\"input.txt\",\"r\",stdin);",
            "#define FILE_READ_OUT freopen(\"output.txt\",\"w\",stdout);",
            "#define all(a) a.begin(),a.end()",
            "using namespace std;",
            "// For ordered_set",
            "using namespace __gnu_pbds;",
            "template <typename T>",
            "using ord_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;",
            "const ll maxn = 1e5;",
            "const ll inf = 1e9;",
            "const double pi = acos(-1);"
        ],
        "description":"Generates all the major macros used in competitive programming and new useful macros will be added with time"
    },
	"Prime_seive" : {
		"prefix": "prime_seive",
		"body": [
			"//eratosthenes seive to find prime numbers",
			"void seive(int n){",
			"\tbool prime[n+1];",
			"\t//this is a function to put same value in splice of an array",
			"\tmemset(prime,true,sizeof(prime));",
			"\tfor (int i=2;i*i <= n;++i){",
			"\t\tif (prime[i] == true){",
			"\t\tfor (int j=i*2;j<=n;j += i){",
			"\t\t\tprime[j] = false;",
			"\t\t}",
			"\t}",
			"\t}",
			"\tint count = 0;",
			"\tfor (int p=2; p<=n; p++) {",
			"",
			"\t\tif (prime[p]) {",
			"\t\t\t//cout << p << ",";",
			"\t\t\tcount ++;",
			"\t\t}",
			"\t}",
			"\tcout << count ;",
			"}",
		]
	}
}